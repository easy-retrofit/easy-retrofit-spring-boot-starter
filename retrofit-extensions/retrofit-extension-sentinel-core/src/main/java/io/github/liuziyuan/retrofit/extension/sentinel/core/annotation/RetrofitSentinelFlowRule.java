package io.github.liuziyuan.retrofit.extension.sentinel.core.annotation;

import io.github.liuziyuan.retrofit.extension.sentinel.core.resource.BaseFlowRuleConfig;

import java.lang.annotation.*;

@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.TYPE, ElementType.METHOD})
@Repeatable(RetrofitSentinelFlowRules.class)
public @interface RetrofitSentinelFlowRule {
    /**
     * if resourceName is default "", the resourceName will be the generated by inner rule.<br>
     * if use properties/yml file to config rule, the resourceName must be same as config file.<br>
     *
     * @return resource name
     */
    String resourceName() default "";

    /**
     * if you don't user properties/yml file to config rule, you can create a new class that extends BaseFlowRuleConfig and override generate() method. <br>
     * if you user properties/yml file to config rule, you can keep the default value. <br>
     * if you user both, the final rule will be use the properties/yml file.
     *
     * @return a class that extends BaseFlowRuleConfig
     */
    Class<? extends BaseFlowRuleConfig> config() default BaseFlowRuleConfig.class;

    /**
     * the fallback method on FallBack class
     *
     * @return fallback method name
     */
    String fallbackMethod();
}
